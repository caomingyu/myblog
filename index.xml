<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CaoMyの博客 on CaoMyの博客</title>
    <link>http://www.cmyblog.top/</link>
    <description>Recent content in CaoMyの博客 on CaoMyの博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 31 Dec 2019 18:13:59 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>SpringBoot使用Redis缓存遇到的坑</title>
      <link>http://www.cmyblog.top/posts/springboot%E4%BD%BF%E7%94%A8redis%E7%BC%93%E5%AD%98%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</link>
      <pubDate>Tue, 31 Dec 2019 18:13:59 +0800</pubDate>
      
      <guid>http://www.cmyblog.top/posts/springboot%E4%BD%BF%E7%94%A8redis%E7%BC%93%E5%AD%98%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</guid>
      <description>

&lt;h1 id=&#34;spring-boot-集成-redis-缓存的坑&#34;&gt;&lt;code&gt;Spring Boot&lt;/code&gt;集成&lt;code&gt;Redis&lt;/code&gt;缓存的坑&lt;/h1&gt;

&lt;h3 id=&#34;一-存放缓存时&#34;&gt;一、存放缓存时&lt;/h3&gt;

&lt;p&gt;​   方法头的的&lt;code&gt;@CachePut&lt;/code&gt;注解，会将方法的返回值缓存进配置的缓存中。（注：如果方法返回为&lt;code&gt;null&lt;/code&gt;，则会把&lt;code&gt;null&lt;/code&gt;缓存进去）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@CachePut(value = &amp;quot;user&amp;quot;, key = &amp;quot;#user.id&amp;quot;)
    @Override
    public User put(User user) {
        DATABASES.put(user.getId(), user);
        log.info(&amp;quot;保存用户【user】= {}&amp;quot;, user);
        return user;
    }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>在Linux系统上，怎么书写jar的启停脚本</title>
      <link>http://www.cmyblog.top/posts/linux%E4%B8%8B%E4%B9%A6%E5%86%99%E5%9F%BA%E4%BA%8Ejar%E7%9A%84%E5%90%AF%E5%81%9C%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Wed, 31 Jul 2019 17:51:19 +0800</pubDate>
      
      <guid>http://www.cmyblog.top/posts/linux%E4%B8%8B%E4%B9%A6%E5%86%99%E5%9F%BA%E4%BA%8Ejar%E7%9A%84%E5%90%AF%E5%81%9C%E8%84%9A%E6%9C%AC/</guid>
      <description>&lt;p&gt;在&lt;code&gt;Linux&lt;/code&gt;系统上，怎么书写&lt;code&gt;jar&lt;/code&gt;的启停脚本&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;启动脚本参考&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  #!/bin/sh
  pidfile=tpid
  if [ -f &amp;quot;$pidfile&amp;quot; ] &amp;amp;&amp;amp; kill -0 $( cat &amp;quot;$pidfile&amp;quot; ); then
  echo &amp;quot;jar 已经在运行中...&amp;quot;
  exit 1
  fi
  nohup java -jar &amp;lt;jar包名&amp;gt; --spring.config.location=/home/cmy/test/ --logging.config=logback-spring.xml &amp;gt;/dev/null 2&amp;gt;&amp;amp;1&amp;amp;
  echo $! &amp;gt; tpid
  echo &amp;quot;jar启动成功&amp;quot;
  
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;停止脚本参考&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  #!/bin/sh
  pidfile=tpid
  if [ ! -f &amp;quot;$pidfile&amp;quot; ] || ! kill -0 $( cat &amp;quot;$pidfile&amp;quot; ); then
  echo &amp;quot;jar没有在运行&amp;quot;
  else
  echo &amp;quot;正在停止jar...&amp;quot;
  PID=$(cat &amp;quot;$pidfile&amp;quot;)
  kill -9 $PID
  rm &amp;quot;$pidfile&amp;quot; &amp;amp;&amp;amp; echo &amp;quot;jar已停止&amp;quot;
  fi
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>运行spring boot打的jar包时，怎么指定配置文件</title>
      <link>http://www.cmyblog.top/posts/%E8%BF%90%E8%A1%8Cspringboot%E6%9E%84%E5%BB%BA%E7%9A%84jar%E6%97%B6%E6%8C%87%E5%AE%9A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 31 Jul 2019 17:45:06 +0800</pubDate>
      
      <guid>http://www.cmyblog.top/posts/%E8%BF%90%E8%A1%8Cspringboot%E6%9E%84%E5%BB%BA%E7%9A%84jar%E6%97%B6%E6%8C%87%E5%AE%9A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;p&gt;运行&lt;code&gt;spring boot&lt;/code&gt;打的&lt;code&gt;jar&lt;/code&gt;包时，怎么指定配置文件&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在&lt;code&gt;pom.xml&lt;/code&gt;文件中，排除要单独指定的配置文件&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;          &amp;lt;resources&amp;gt;
              &amp;lt;resource&amp;gt;
                  &amp;lt;directory&amp;gt;src\main\resources&amp;lt;/directory&amp;gt; &amp;lt;!--配置文件路径--&amp;gt;
                  &amp;lt;excludes&amp;gt;
                      &amp;lt;exclude&amp;gt;logback-spring.xml&amp;lt;/exclude&amp;gt; &amp;lt;!--要排除的配置文件名--&amp;gt;
                      &amp;lt;exclude&amp;gt;application.yml&amp;lt;/exclude&amp;gt;
                      &amp;lt;exclude&amp;gt;application-pro.yml&amp;lt;/exclude&amp;gt;
                  &amp;lt;/excludes&amp;gt;
              &amp;lt;/resource&amp;gt;
          &amp;lt;/resources&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;通过&lt;code&gt;Maven&lt;/code&gt;打包后，执行jar包时，指定所需配置文件&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  java -jar &amp;lt;jar包名&amp;gt; --spring.config.location=/home/cmy/test/ --logging.config=logback-spring.xml &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;进阶，配合&lt;code&gt;nohup&lt;/code&gt;命令，实现无控制台日志输出的后台运行&lt;code&gt;jar&lt;/code&gt;包&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  nohup java -jar &amp;lt;jar包名&amp;gt; --spring.config.location=/home/cmy/test/ --logging.config=logback-spring.xml &amp;gt;/dev/null 2&amp;gt;&amp;amp;1&amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;其中，如下命令实现了&lt;code&gt;nohup&lt;/code&gt;命令无控制台日志输出功能&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nohup &amp;lt;...&amp;gt; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1&amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Spring Boot通过Maven打jar包时，怎么引入本地jar包</title>
      <link>http://www.cmyblog.top/posts/springboot%E4%B8%8Bmaven%E6%89%93jar%E5%8C%85%E6%97%B6%E5%BC%95%E5%85%A5%E6%9C%AC%E5%9C%B0jar/</link>
      <pubDate>Wed, 31 Jul 2019 17:26:31 +0800</pubDate>
      
      <guid>http://www.cmyblog.top/posts/springboot%E4%B8%8Bmaven%E6%89%93jar%E5%8C%85%E6%97%B6%E5%BC%95%E5%85%A5%E6%9C%AC%E5%9C%B0jar/</guid>
      <description>&lt;p&gt;&lt;code&gt;spring boot&lt;/code&gt;通过&lt;code&gt;Maven&lt;/code&gt;打jar包时，怎么引入本地&lt;code&gt;jar&lt;/code&gt;包&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pom.xml&lt;/code&gt;文件中，配置本地&lt;code&gt;jar&lt;/code&gt;包路径和在&lt;code&gt;build&lt;/code&gt;标签下增加配置&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;如下代码所示,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;引入本地&lt;code&gt;jar&lt;/code&gt;包&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;com.aaa&amp;lt;/groupId&amp;gt; &amp;lt;!--无所谓，随便写--&amp;gt;
    &amp;lt;artifactId&amp;gt;bbb&amp;lt;/artifactId&amp;gt; &amp;lt;!--无所谓，随便写,作为项目jar中的外部jar包名字--&amp;gt;
    &amp;lt;version&amp;gt;1.0.0&amp;lt;/version&amp;gt; &amp;lt;!--无所谓，随便写--&amp;gt;
    &amp;lt;scope&amp;gt;system&amp;lt;/scope&amp;gt;
    &amp;lt;systemPath&amp;gt;${project.basedir}/lib/ojdbc6.jar&amp;lt;/systemPath&amp;gt; &amp;lt;!--本地jar路径--&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;修改&lt;code&gt;build&lt;/code&gt;标签配置&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;    &amp;lt;build&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;includeSystemScope&amp;gt;true&amp;lt;/includeSystemScope&amp;gt; &amp;lt;!--增加此配置--&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>@VALUE注解对0开头数字的解析</title>
      <link>http://www.cmyblog.top/posts/value%E6%B3%A8%E8%A7%A3%E5%AF%B90%E5%BC%80%E5%A4%B4%E6%95%B0%E5%AD%97%E7%9A%84%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Wed, 17 Jul 2019 22:44:20 +0800</pubDate>
      
      <guid>http://www.cmyblog.top/posts/value%E6%B3%A8%E8%A7%A3%E5%AF%B90%E5%BC%80%E5%A4%B4%E6%95%B0%E5%AD%97%E7%9A%84%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;p&gt;　　Spring的&lt;code&gt;@VALUE&lt;/code&gt;注解对于&lt;code&gt;properties&lt;/code&gt;和&lt;code&gt;yml&lt;/code&gt;格式的配置文件，进行解析时，对于&lt;code&gt;0&lt;/code&gt;开头的值，会进行解析操作&lt;/p&gt;

&lt;p&gt;　　对于非&lt;code&gt;0&lt;/code&gt;开头的值，会按照正常类型进行解析&lt;/p&gt;

&lt;p&gt;　　对于&lt;code&gt;0&lt;/code&gt;开头的值，对安装对应进制进行解析(即，安装数字转型进行处理)&lt;/p&gt;

&lt;p&gt;　　为了解决这一问题，可以用&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;将值引起来，&lt;code&gt;@VALUE&lt;/code&gt;注解就会按照字符串的形式进行解析&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Idea中Maven无法显示依赖</title>
      <link>http://www.cmyblog.top/posts/idea%E4%B8%ADmaven%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E4%BE%9D%E8%B5%96/</link>
      <pubDate>Wed, 10 Jul 2019 21:45:41 +0800</pubDate>
      
      <guid>http://www.cmyblog.top/posts/idea%E4%B8%ADmaven%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E4%BE%9D%E8%B5%96/</guid>
      <description>&lt;p&gt;　　&lt;code&gt;Idea&lt;/code&gt;有时会出现&lt;code&gt;Maven&lt;/code&gt;的依赖无法显示情况，即在右边栏&lt;code&gt;Maven&lt;/code&gt;工具中,&lt;code&gt;Dependencies&lt;/code&gt;一栏中，没有正确的依赖显示，如&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/mw690/006aLRzqly1g4v34l4g9ej30jq0hzmyl.jpg&#34; height=&#34;50%&#34; width=&#34;50%&#34; alt=&#34;Idea中Maven工具显示依赖&#34;&gt;  &lt;/br&gt;&lt;/p&gt;

&lt;p&gt;　　考虑了网上的诸多解决方案，均没有解决问题，后来经过同事帮助，解决了问题，具体解决思路步骤如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;

&lt;ul&gt;
&lt;li&gt;同事通过执行&lt;code&gt;mvn -version&lt;/code&gt;命令，输出正常&lt;code&gt;Maven&lt;/code&gt;信息，排除本地&lt;code&gt;Maven&lt;/code&gt;工具错误的可能&lt;/li&gt;
&lt;li&gt;接下来，执行&amp;rsquo;mvn clean&amp;rsquo;和&amp;rsquo;mvn -Dmaven.test.skip=true install&amp;rsquo;命令，分别清除编译的&lt;code&gt;class&lt;/code&gt;文件并跳过测试进行安装,发现没有输出报错信息，并正常安装，此时可以证明，依赖已经正常引入&lt;/li&gt;
&lt;li&gt;接下来，怀疑是Idea缓存的锅，进行Idea的缓存清除操作并重启,如&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/006aLRzqly1g4v413xykgj30dg0h1aao.jpg&#34; alt=&#34;Idea清除缓存操作&#34; height=&#34;355.51&#34; width=&#34;390&#34;&gt;&lt;/br&gt;&lt;/p&gt;

&lt;p&gt;　　重启后，&lt;code&gt;Idea&lt;/code&gt;里的&lt;code&gt;Maven&lt;/code&gt;工具已正常显示依赖项，问题解决，特此记录。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>文件路径分隔符跨平台问题</title>
      <link>http://www.cmyblog.top/posts/%E9%9A%8F%E7%AC%94/</link>
      <pubDate>Tue, 09 Jul 2019 11:13:42 +0800</pubDate>
      
      <guid>http://www.cmyblog.top/posts/%E9%9A%8F%E7%AC%94/</guid>
      <description>&lt;p&gt;　　考虑到不同平台下，文件路径分隔符不同，如Windows下为&amp;rsquo;&lt;code&gt;\&lt;/code&gt;&amp;rsquo;,Linux下为&amp;rsquo;&lt;code&gt;/&lt;/code&gt;&amp;lsquo;，项目中如果不考虑分隔符的多平台一致，经常会造成上线问题，报错诸如：&amp;rsquo;&lt;code&gt;no such file or directory&lt;/code&gt;&amp;lsquo;&lt;/p&gt;

&lt;p&gt;　　此时，可以使用File的静态常量&lt;code&gt;separator&lt;/code&gt;，如，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;String fileHome = &amp;quot;&amp;quot;;
String fileName = &amp;quot;&amp;quot;;
                    
File file = new File(fileHome + File.separator + fileName);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://www.cmyblog.top/about/</link>
      <pubDate>Tue, 09 Jul 2019 09:30:26 +0800</pubDate>
      
      <guid>http://www.cmyblog.top/about/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Waves are the practice of the water. Shunryu Suzuki&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>